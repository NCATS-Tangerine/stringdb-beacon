# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ConceptsconceptIdDetails(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, tag: str=None, value: str=None):
        """
        ConceptsconceptIdDetails - a model defined in Swagger

        :param tag: The tag of this ConceptsconceptIdDetails.
        :type tag: str
        :param value: The value of this ConceptsconceptIdDetails.
        :type value: str
        """
        self.swagger_types = {
            'tag': str,
            'value': str
        }

        self.attribute_map = {
            'tag': 'tag',
            'value': 'value'
        }

        self._tag = tag
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ConceptsconceptIdDetails':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The conceptsconceptId_details of this ConceptsconceptIdDetails.
        :rtype: ConceptsconceptIdDetails
        """
        return deserialize_model(dikt, cls)

    @property
    def tag(self) -> str:
        """
        Gets the tag of this ConceptsconceptIdDetails.
        property name 

        :return: The tag of this ConceptsconceptIdDetails.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag: str):
        """
        Sets the tag of this ConceptsconceptIdDetails.
        property name 

        :param tag: The tag of this ConceptsconceptIdDetails.
        :type tag: str
        """

        self._tag = tag

    @property
    def value(self) -> str:
        """
        Gets the value of this ConceptsconceptIdDetails.
        property value 

        :return: The value of this ConceptsconceptIdDetails.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """
        Sets the value of this ConceptsconceptIdDetails.
        property value 

        :param value: The value of this ConceptsconceptIdDetails.
        :type value: str
        """

        self._value = value

